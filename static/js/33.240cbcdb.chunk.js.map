{"version":3,"file":"static/js/33.240cbcdb.chunk.js","mappings":"qLAEaA,E,QAAeC,EAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wd,SCIzC,MAJA,SAAeC,GAAgB,IAAbC,EAAQD,EAARC,SAChB,OAAOC,EAAAA,EAAAA,KAACN,EAAY,CAACO,KAAK,SAAQF,SAAEA,GACtC,C,iKCDaG,EAAQP,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0SAgBjBM,EAAUR,EAAAA,EAAAA,EAAQS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0EAMlBQ,EAAcV,EAAAA,EAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,qXAqBxBU,EAAsBZ,EAAAA,EAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,qJAShCY,EAAOd,EAAAA,EAAAA,KAAWe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yCAGlBc,EAAWhB,EAAAA,EAAAA,EAAQiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+BAInBgB,EAAYlB,EAAAA,EAAAA,GAASmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,mEAMrBkB,EAAepB,EAAAA,EAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,qDAKzBoB,EAAStB,EAAAA,EAAAA,IAAUuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,QAEnBsB,GAAWxB,EAAAA,EAAAA,GAAOyB,EAAAA,IAAPzB,CAAe0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6D,0DCqDvC,MA1GA,WAAyB,IAADyB,EAAAC,EACtBC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACdI,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,KAapD,IAXAgB,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBT,GACdU,MAAK,SAAAC,GACJZ,EAASY,EACX,IACCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACd,IACCG,SAAQ,WAAO,GACpB,GAAG,CAAChB,IAECF,EAIL,OACEmB,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,IAAU,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAAInD,SAAA,EAErBgD,EAAAA,EAAAA,MAACM,EAAAA,EAAe,CAAAtD,SAAA,EACdC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,GAAIrB,EAAasB,QAAQzD,UAC7BC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAAA1D,SAAC,eAEVC,EAAAA,EAAAA,KAACE,EAAK,CAAAH,SAAO,OAAL6B,QAAK,IAALA,OAAK,EAALA,EAAO8B,SACf1D,EAAAA,EAAAA,KAACG,EAAO,CAAAJ,SAAO,OAAL6B,QAAK,IAALA,OAAK,EAALA,EAAO+B,WACjBZ,EAAAA,EAAAA,MAAC1C,EAAW,CAAAN,SAAA,EACVC,EAAAA,EAAAA,KAACe,EAAY,CAAAhB,SACV6B,EAAmB,aAClB5B,EAAAA,EAAAA,KAACiB,EAAM,CACL2C,IAAG,iCAAAC,OAAmCjC,EAAmB,aACzDkC,IAAU,OAALlC,QAAK,IAALA,OAAK,EAALA,EAAO8B,SAGd1D,EAAAA,EAAAA,KAACmB,EAAQ,OAGb4B,EAAAA,EAAAA,MAACxC,EAAmB,CAAAR,SAAA,CACjB6B,EAAoB,cACnBmB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,YAAe,IACpBgE,KAAKC,MAA8B,GAAxBpC,EAAoB,cAAU,MAE1C,KACHA,EAAoB,cACnBmB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,aAAe,IAAE6B,EAAoB,gBAE3C,KAEHA,EAA4B,sBAC3BmB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,aAAe,IAAE6B,EAA4B,qBAAE,GAAGqC,QAExD,KAEHrC,EAAMsC,QACLnB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,YAAc,IAAE6B,EAAMsC,UAE5B,KAEHtC,EAAc,QAAKA,EAAc,OAAEuC,OAAS,GAC3CpB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,YAAe,IACpB6B,EAAc,OAAEwC,KAAI,SAAAC,GAAK,OAAIA,EAAMJ,IAAI,IAAEK,KAAK,SAE/C,KACH1C,EAAM2C,SACLxB,EAAAA,EAAAA,MAAA,KAAAhD,SAAA,EACEC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,aAAe,IAAE6B,EAAM2C,QAAQ,UAErC,MAEJvE,EAAAA,EAAAA,KAACW,EAAQ,CAAAZ,SAAO,OAAL6B,QAAK,IAALA,OAAK,EAALA,EAAO4C,qBAIxBzB,EAAAA,EAAAA,MAACM,EAAAA,EAAe,CAAAtD,SAAA,EACdgD,EAAAA,EAAAA,MAAClC,EAAS,CAAAd,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,GAAG,OAAMxD,UACbC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAAA1D,SAAC,cAGZC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACC,GAAG,UAASxD,UAChBC,EAAAA,EAAAA,KAACyD,EAAAA,EAAM,CAAA1D,SAAC,oBAIdC,EAAAA,EAAAA,KAACyE,EAAAA,SAAQ,CAACC,UAAU1E,EAAAA,EAAAA,KAAC2E,EAAAA,EAAM,IAAI5E,UAC7BC,EAAAA,EAAAA,KAAC4E,EAAAA,GAAM,WAKjB,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 20px #eee; */\n  border-radius: 10px;\n  display: block;\n  cursor: pointer;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\n\nfunction Button({ children }) {\n  return <ButtonStyled type=\"button\">{children}</ButtonStyled>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { TbMovie } from 'react-icons/tb';\n\nexport const Title = styled.h2`\n  color: #fe6d31;\n  padding-top: 20px;\n  padding-bottom: 5px;\n  position: relative;\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\n\nexport const Tagline = styled.p`\n  padding-bottom: 20px;\n  color: #8f938f;\n  font-size: 14px;\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  position: relative;\n  flex-direction: column;\n\n  @media screen and (min-width: 860px) {\n    flex-direction: row;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: -20px;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 2px 8px 0px black;\n`;\n\nexport const Span = styled.span`\n  color: var(--second-color);\n`;\nexport const Overview = styled.p`\n  max-width: 600px;\n`;\n\nexport const LinksWrap = styled.ul`\n  display: flex;\n  gap: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  min-width: 300px;\n  min-height: 450px;\n`;\n\nexport const Poster = styled.img``;\n\nexport const NoPoster = styled(TbMovie)`\n  width: 100%;\n  height: 100%;\n  stroke: white;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, Link } from 'react-router-dom';\nimport {\n  Title,\n  Tagline,\n  MainWrapper,\n  MovieDetailsWrapper,\n  Overview,\n  LinksWrap,\n  Span,\n  ImageWrapper,\n  Poster,\n  NoPoster,\n} from './MovieDetails.styled';\nimport { getMoviesDetails } from 'services/moviesDetailsAPI';\nimport Button from 'components/Button/Button';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\nimport Loader from 'components/Loader/Loader';\nimport { motion } from 'framer-motion';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getMoviesDetails(movieId)\n      .then(res => {\n        setMovie(res);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {});\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <SectionTemplate>\n        <Link to={backLinkHref.current}>\n          <Button>Go Back</Button>\n        </Link>\n        <Title>{movie?.title}</Title>\n        <Tagline>{movie?.tagline}</Tagline>\n        <MainWrapper>\n          <ImageWrapper>\n            {movie['poster_path'] ? (\n              <Poster\n                src={`http://image.tmdb.org/t/p/w300${movie['poster_path']}`}\n                alt={movie?.title}\n              />\n            ) : (\n              <NoPoster />\n            )}\n          </ImageWrapper>\n          <MovieDetailsWrapper>\n            {movie['vote_average'] ? (\n              <p>\n                <Span>Rating:</Span>{' '}\n                {Math.round(movie['vote_average'] * 10) / 10}\n              </p>\n            ) : null}\n            {movie['release_date'] ? (\n              <p>\n                <Span>Release:</Span> {movie['release_date']}\n              </p>\n            ) : null}\n\n            {movie['production_countries'] ? (\n              <p>\n                <Span>Country:</Span> {movie['production_countries'][0].name}\n              </p>\n            ) : null}\n\n            {movie.budget ? (\n              <p>\n                <Span>Budget:</Span> {movie.budget}\n              </p>\n            ) : null}\n\n            {movie['genres'] && movie['genres'].length > 0 ? (\n              <p>\n                <Span>Genres:</Span>{' '}\n                {movie['genres'].map(genre => genre.name).join(', ')}\n              </p>\n            ) : null}\n            {movie.runtime ? (\n              <p>\n                <Span>Runtime:</Span> {movie.runtime} min\n              </p>\n            ) : null}\n\n            <Overview>{movie?.overview}</Overview>\n          </MovieDetailsWrapper>\n        </MainWrapper>\n      </SectionTemplate>\n      <SectionTemplate>\n        <LinksWrap>\n          <li>\n            <Link to=\"cast\">\n              <Button>Cast</Button>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">\n              <Button>Reviews</Button>\n            </Link>\n          </li>\n        </LinksWrap>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </SectionTemplate>\n    </motion.div>\n  );\n}\nexport default MovieDetails;\n"],"names":["ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","type","Title","Tagline","_templateObject2","MainWrapper","_templateObject3","MovieDetailsWrapper","_templateObject4","Span","_templateObject5","Overview","_templateObject6","LinksWrap","_templateObject7","ImageWrapper","_templateObject8","Poster","_templateObject9","NoPoster","TbMovie","_templateObject10","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMoviesDetails","then","res","catch","err","console","log","finally","_jsxs","motion","initial","opacity","animate","exit","SectionTemplate","Link","to","current","Button","title","tagline","src","concat","alt","Math","round","name","budget","length","map","genre","join","runtime","overview","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}