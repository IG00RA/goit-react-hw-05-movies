{"version":3,"file":"static/js/395.0832662d.chunk.js","mappings":"sLAEaA,E,QAAeC,EAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wd,SCIzC,MAJA,SAAeC,GAAgB,IAAbC,EAAQD,EAARC,SAChB,OAAOC,EAAAA,EAAAA,KAACN,EAAY,CAACO,KAAK,SAAQF,SAAEA,GACtC,C,yHCDaG,EAAYP,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+JASrBM,GAAYR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,iD,6BC0DrC,MAhEA,WACE,IAAAS,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MA+BjB,OA7BAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,IAEXQ,EAAAA,EAAAA,MACGC,MAAK,SAAA1B,GAAiB,IAAd2B,EAAM3B,EAAN2B,OACPN,EAASM,EACX,IACCC,OAAM,SAAAC,GACLhB,GAAS,GACTiB,QAAQC,IAAIF,EACd,IACCG,SAAQ,WACPf,GAAW,EACb,GACJ,GAAG,IAECL,GACFqB,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAIP1B,GAEAd,EAAAA,EAAAA,KAAAyC,EAAAA,SAAA,CAAA1C,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAMPC,EAAAA,EAAAA,KAAAyC,EAAAA,SAAA,CAAA1C,UACEC,EAAAA,EAAAA,KAACE,EAAS,CAAAH,SACPmB,EAAMwB,KAAI,SAAAC,GAAmB,IAAhBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACVC,EAAa,IAAIC,MACpB,IAAIA,KAASC,KAAKC,MAAsB,KAAhBD,KAAKE,WAEhC,OACElD,EAAAA,EAAAA,KAACG,EAAS,CAERgD,GAAE,kBAAAC,OAAoBR,GACtBS,MAAO,CAAEC,KAAMlC,GAAWrB,SAEzB8C,GAJID,EAAKE,EAAWS,UAO3B,OAIR,C,6NClEaC,EAAO7D,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMlB4D,EAAQ9D,EAAAA,EAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,QAEpB6D,EAAQ/D,EAAAA,EAAAA,MAAYgE,IAAAA,GAAA9D,EAAAA,EAAAA,GAAA,wSAgBpB+D,EAAejE,EAAAA,EAAAA,OAAakE,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,oYAmB5BiE,GAAOnE,EAAAA,EAAAA,GAAOoE,EAAAA,IAAPpE,CAAmBqE,IAAAA,GAAAnE,EAAAA,EAAAA,GAAA,wEAO1BoE,EAActE,EAAAA,EAAAA,OAAauE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,igB,yMCgGxC,UAlIA,WAAwB,IAADsE,EAAAC,EACrB9D,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCyD,EAAKxD,EAAA,GAAEyD,EAAQzD,EAAA,GACtBG,GAAwBT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5BuD,EAAItD,EAAA,GAAEuD,EAAOvD,EAAA,GACpBwD,GAAkClE,EAAAA,EAAAA,UAAS,IAAGmE,GAAAjE,EAAAA,EAAAA,GAAAgE,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BtE,EAAAA,EAAAA,UAAS,IAAGuE,GAAArE,EAAAA,EAAAA,GAAAoE,EAAA,GAA/B3D,EAAK4D,EAAA,GAAE3D,EAAQ2D,EAAA,GACtBC,GAA0BxE,EAAAA,EAAAA,UAAS,IAAGyE,GAAAvE,EAAAA,EAAAA,GAAAsE,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAUC,EAAAA,EAAAA,MAAVD,MACRE,GAA4C9E,EAAAA,EAAAA,WAAS,GAAM+E,GAAA7E,EAAAA,EAAAA,GAAA4E,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClClE,GAAWC,EAAAA,EAAAA,MACXoE,GAAeC,EAAAA,EAAAA,QAA2B,QAArBvB,EAAe,QAAfC,EAAChD,EAASiC,aAAK,IAAAe,OAAA,EAAdA,EAAgBd,YAAI,IAAAa,EAAAA,EAAI,KAmDpD,GAjDIgB,IAAUR,IACZH,EAAQ,GACRF,EAAS,MACTM,EAAaO,KAGf7D,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAMyE,OAAS,EAAG,CACpB,IAAMC,EAAgB1E,EAAM2E,MAAK,SAAAC,GAAE,OAAIA,EAAGlD,KAAOmD,SAASZ,EAAM,IAC5DS,GACFV,EAASU,EAAc/C,KAE3B,CACF,GAAG,CAAC3B,EAAOiE,KAEX7D,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAA1B,GAAiB,IAAd2B,EAAM3B,EAAN2B,OACPN,EAASM,EACX,IACCC,OAAM,SAAAC,GACLhB,GAAS,GACTiB,QAAQC,IAAIF,EACd,IACCG,SAAQ,WAAO,GACpB,GAAG,KAEHR,EAAAA,EAAAA,YAAU,YACR0E,EAAAA,EAAAA,IAAiBb,EAAOZ,GACrB/C,MAAK,SAAAmB,GAAkB,IAAfsD,EAAOtD,EAAPsD,QAEL3B,EADW,IAATC,EACO0B,EAEA,SAAAC,GAAU,SAAA9C,QAAA+C,EAAAA,EAAAA,GAAQD,IAAUC,EAAAA,EAAAA,GAAKF,GAAO,EAErD,IACCvE,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACd,IACCG,SAAQ,WACP0D,GAAkB,EACpB,GACJ,GAAG,CAACL,EAAOZ,IAONF,EAgBL,OAZI3D,GACFqB,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,aAIT4D,EAAAA,EAAAA,MAACC,EAAAA,EAAAA,IAAU,CACTC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAAIxG,SAAA,EAErBC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,KACX1G,EAAAA,EAAAA,KAAC2G,EAAAA,EAAe,CAAA5G,UACdC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC+C,GAAIsC,EAAamB,QAAQ7G,UAC7BC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAM,CAAA9G,SAAC,iBAGZqG,EAAAA,EAAAA,MAACO,EAAAA,EAAe,CAAA5G,SAAA,EACdC,EAAAA,EAAAA,KAAC8G,EAAAA,EAAa,CAAA/G,SAAEkF,KAChBjF,EAAAA,EAAAA,KAAC+G,EAAAA,EAAY,CAAAhH,SACVsE,EAAM3B,KAAI,SAAC2B,EAAO2C,GAAK,OACtBhH,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAEHC,QAAS7C,EAAMzB,GACfqC,MAAOZ,EAAMY,OAASZ,EAAMxB,KAC5BsE,OAAQ9C,EAAmB,YAC3BpE,KAAM,QACNmH,OAAQ/C,EAAoB,aAC5BgD,KAAMhD,EAAoB,cANrBA,EAAMzB,GAAKoE,EAOhB,MAGJzB,GAGAvF,EAAAA,EAAAA,KAACiE,EAAAA,GAAW,CAAAlE,UACVC,EAAAA,EAAAA,KAACsH,EAAAA,GAAS,CACRC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CACZC,eAAgB,SAChB7F,SAAU,WACV8F,IAAK,IACLC,KAAM,MACNC,UAAW,oBAEbC,iBAAiB,GACjBC,SAAS,OAjBblI,EAAAA,EAAAA,KAACiE,EAAAA,GAAW,CAACkE,QAjDE,WACrB3C,GAAkB,GAClBhB,GAAQ,SAAA4D,GAAQ,OAAIA,EAAW,CAAC,GAClC,EA8C6CrI,SAAC,mBAwBhD,C,yOClJMsI,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QADqB,+BAWrB,IAAMC,EACM,sBADNA,EAEI,oBAFJA,EAGU,kBAHVA,EAIU,gBAJVA,EAKM,mBALNA,EAMK,iBANLA,EAOQ,qBAGDC,EAAqB,eAAA1I,GAAA2I,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZX,EAAAA,EAAAA,IAAUC,EAAqB,CAClDW,OAAQ,CAAEC,QAASd,EAASe,SAAU,WACrC,KAAD,EAFU,OAANP,EAAME,EAAAM,KAAAN,EAAAO,OAAA,SAGLT,EAAOU,MAAI,aAAAR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEZ,IAAIU,MAAMV,EAAAS,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAZ,EAAAa,OAAA,GAAAhB,EAAA,kBAE/C,kBATiC,OAAA9I,EAAA+J,MAAA,KAAAC,UAAA,KAWrBvI,EAAS,eAAAoB,GAAA8F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoB,IAAA,IAAAlB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEAX,EAAAA,EAAAA,IAAUC,EAAmB,CAChDW,OAAQ,CAAEC,QAASd,KAClB,KAAD,EAFU,OAANQ,EAAMmB,EAAAX,KAAAW,EAAAV,OAAA,SAGLT,EAAOU,MAAI,aAAAS,EAAAhB,KAAA,EAAAgB,EAAAR,GAAAQ,EAAA,SAEZ,IAAIP,MAAMO,EAAAR,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAK,EAAAJ,OAAA,GAAAG,EAAA,kBAE/C,kBATqB,OAAApH,EAAAkH,MAAA,KAAAC,UAAA,KAWTG,EAAW,eAAAC,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwB,IAAA,IAAAtB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEFX,EAAAA,EAAAA,IAAUC,EAAqB,CAClDW,OAAQ,CAAEC,QAASd,EAASe,SAAU,WACrC,KAAD,EAFU,OAANP,EAAMuB,EAAAf,KAAAe,EAAAd,OAAA,SAGLT,EAAOU,MAAI,aAAAa,EAAApB,KAAA,EAAAoB,EAAAZ,GAAAY,EAAA,SAEZ,IAAIX,MAAMW,EAAAZ,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAS,EAAAR,OAAA,GAAAO,EAAA,kBAE/C,kBATuB,OAAAD,EAAAL,MAAA,KAAAC,UAAA,KAWXO,EAAU,eAAAC,GAAA7B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4B,IAAA,IAAA1B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAEDX,EAAAA,EAAAA,IAAUC,EAAoB,CACjDW,OAAQ,CAAEC,QAASd,EAASe,SAAU,WACrC,KAAD,EAFU,OAANP,EAAM2B,EAAAnB,KAAAmB,EAAAlB,OAAA,SAGLT,EAAOU,MAAI,aAAAiB,EAAAxB,KAAA,EAAAwB,EAAAhB,GAAAgB,EAAA,SAEZ,IAAIf,MAAMe,EAAAhB,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAa,EAAAZ,OAAA,GAAAW,EAAA,kBAE/C,kBATsB,OAAAD,EAAAT,MAAA,KAAAC,UAAA,KAWVW,EAAa,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,IAAA,IAAA9B,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEJX,EAAAA,EAAAA,IAAUC,EAAuB,CACpDW,OAAQ,CAAEC,QAASd,EAASe,SAAU,WACrC,KAAD,EAFU,OAANP,EAAM+B,EAAAvB,KAAAuB,EAAAtB,OAAA,SAGLT,EAAOU,MAAI,aAAAqB,EAAA5B,KAAA,EAAA4B,EAAApB,GAAAoB,EAAA,SAEZ,IAAInB,MAAMmB,EAAApB,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAiB,EAAAhB,OAAA,GAAAe,EAAA,kBAE/C,kBATyB,OAAAD,EAAAb,MAAA,KAAAC,UAAA,KAWbe,EAAe,eAAAC,GAAArC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoC,EAAOC,EAAOzG,GAAI,IAAAsE,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAExBX,EAAAA,EAAAA,IAAUC,EAAyB,CACtDW,OAAQ,CAAE8B,MAAAA,EAAO7B,QAASd,EAASe,SAAU,QAAS7E,KAAAA,KACrD,KAAD,EAFU,OAANsE,EAAMoC,EAAA5B,KAAA4B,EAAA3B,OAAA,SAGLT,EAAOU,MAAI,aAAA0B,EAAAjC,KAAA,EAAAiC,EAAAzB,GAAAyB,EAAA,SAEZ,IAAIxB,MAAMwB,EAAAzB,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAAsB,EAAArB,OAAA,GAAAmB,EAAA,kBAE/C,gBAT2BG,EAAAC,GAAA,OAAAL,EAAAjB,MAAA,KAAAC,UAAA,KAWf9D,EAAgB,eAAAoF,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0C,EAAOlG,EAAOZ,GAAI,IAAAsE,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAAqC,EAAAtC,KAAA,EAAAsC,EAAArC,KAAA,EAEzBX,EAAAA,EAAAA,IAAUC,EAAyB,CACtDW,OAAQ,CACNqC,eAAe,EACfpC,QAASd,EACTmD,eAAe,EACfpC,SAAU,QACV7E,KAAAA,EACAkH,QAAS,kBACTC,YAAavG,KAEd,KAAD,EAVU,OAAN0D,EAAMyC,EAAAjC,KAAAiC,EAAAhC,OAAA,SAWLT,EAAOU,MAAI,aAAA+B,EAAAtC,KAAA,EAAAsC,EAAA9B,GAAA8B,EAAA,SAEZ,IAAI7B,MAAM6B,EAAA9B,GAAME,SAASH,KAAKI,SAAS,KAAD,oBAAA2B,EAAA1B,OAAA,GAAAyB,EAAA,kBAE/C,gBAjB4BM,EAAAC,GAAA,OAAAR,EAAAvB,MAAA,KAAAC,UAAA,I","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Movies/GenrePanel/GenrePanel.styled.js","components/Movies/GenrePanel/GenrePanel.jsx","components/SearchMovie/SearchMovie.styled.js","pages/MovieGenres/MovieGenres.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyled = styled.button`\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  /* box-shadow: 0 0 20px #eee; */\n  border-radius: 10px;\n  display: block;\n  cursor: pointer;\n\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { ButtonStyled } from './Button.styled';\n\nfunction Button({ children }) {\n  return <ButtonStyled type=\"button\">{children}</ButtonStyled>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GenreList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding: 10px;\n  justify-content: center;\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.2);\n`;\n\nexport const GenreName = styled(Link)`\n  font-size: 12px;\n  color: #8f938f;\n`;\n","import { useState, useEffect } from 'react';\nimport { getGenres } from 'services/moviesAPI';\nimport { GenreList, GenreName } from './GenrePanel.styled';\nimport { toast } from 'react-toastify';\nimport { useLocation } from 'react-router-dom';\n\nfunction GenrePanel() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getGenres()\n      .then(({ genres }) => {\n        setArray(genres);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <p>Loading...</p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <GenreList>\n        {array.map(({ id, name }) => {\n          const randomDate = new Date(\n            +new Date() - Math.floor(Math.random() * 10000000000)\n          );\n          return (\n            <GenreName\n              key={id * randomDate.getTime()}\n              to={`/movies/genres/${id}`}\n              state={{ from: location }}\n            >\n              {name}\n            </GenreName>\n          );\n        })}\n      </GenreList>\n    </>\n  );\n}\nexport default GenrePanel;\n","import styled from '@emotion/styled';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Form = styled.form`\n  display: flex;\n  height: 40px;\n  padding-bottom: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  width: 300px;\n  font-size: 18px;\n  color: white;\n  background-color: #2d2b36;\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  outline: none;\n  &::placeholder {\n    color: rgba(100, 100, 100, 1);\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  background-color: #fe6d31;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  height: 100%;\n  padding: 0;\n  display: inline-block;\n  padding-top: 5px;\n  padding-right: 5px;\n  padding-left: 5px;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  transition: background-color 0.3s ease;\n  &:hover {\n    background-color: orangered;\n  }\n`;\n\nexport const Icon = styled(BiSearchAlt)`\n  fill: white;\n  padding: 0;\n  width: 90%;\n  height: 90%;\n`;\n\nexport const BtnLoadMore = styled.button`\n  position: relative;\n  background-image: linear-gradient(\n    to right,\n    #485563 0%,\n    #29323c 51%,\n    #485563 100%\n  );\n  padding: 15px 45px;\n  text-align: center;\n  text-transform: uppercase;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: white;\n  border-radius: 10px;\n  display: block;\n  min-width: 166px;\n  height: 50px;\n  cursor: pointer;\n  margin: 0 auto;\n  &:hover {\n    background-position: right center;\n    color: #fff;\n    text-decoration: none;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n// import {} from './MovieGenres.styled';\nimport { getMoviesByGenre } from 'services/moviesAPI';\nimport Button from 'components/Button/Button';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\nimport ListTemplate from 'components/ListTemplate/ListTemplate';\nimport Card from 'components/Card/Card';\nimport { BtnLoadMore } from 'components/SearchMovie/SearchMovie.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport GenrePanel from 'components/Movies/GenrePanel/GenrePanel';\nimport { getGenres } from 'services/moviesAPI';\nimport { toast } from 'react-toastify';\nimport { motion } from 'framer-motion';\n// import Loader from 'components/Loader/Loader';\n\nfunction MovieGenres() {\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const [page, setPage] = useState(1);\n  const [prevGenre, setPrevGenre] = useState('');\n  const [array, setArray] = useState([]);\n  const [title, setTitle] = useState('');\n  const { genre } = useParams();\n  const [loaderLoadMore, setLoaderLoadMore] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  if (genre !== prevGenre) {\n    setPage(1);\n    setMovie(null);\n    setPrevGenre(genre);\n  }\n\n  useEffect(() => {\n    if (array.length > 0) {\n      const selectedGenre = array.find(ob => ob.id === parseInt(genre));\n      if (selectedGenre) {\n        setTitle(selectedGenre.name);\n      }\n    }\n  }, [array, genre]);\n\n  useEffect(() => {\n    getGenres()\n      .then(({ genres }) => {\n        setArray(genres);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {});\n  }, []);\n\n  useEffect(() => {\n    getMoviesByGenre(genre, page)\n      .then(({ results }) => {\n        if (page === 1) {\n          setMovie(results);\n        } else {\n          setMovie(prevMovies => [...prevMovies, ...results]);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setLoaderLoadMore(false);\n      });\n  }, [genre, page]);\n\n  const handleLoadMore = () => {\n    setLoaderLoadMore(true);\n    setPage(prevPage => prevPage + 1);\n  };\n\n  if (!movie) {\n    return;\n  }\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <GenrePanel />\n      <SectionTemplate>\n        <Link to={backLinkHref.current}>\n          <Button>Go Back</Button>\n        </Link>\n      </SectionTemplate>\n      <SectionTemplate>\n        <TitleTemplate>{title}</TitleTemplate>\n        <ListTemplate>\n          {movie.map((movie, index) => (\n            <Card\n              key={movie.id - index}\n              movieId={movie.id}\n              title={movie.title || movie.name}\n              poster={movie['poster_path']}\n              type={'movie'}\n              rating={movie['vote_average']}\n              date={movie['release_date']}\n            />\n          ))}\n        </ListTemplate>\n        {!loaderLoadMore ? (\n          <BtnLoadMore onClick={handleLoadMore}>Load more</BtnLoadMore>\n        ) : (\n          <BtnLoadMore>\n            <ThreeDots\n              height=\"50\"\n              width=\"50\"\n              radius=\"9\"\n              color=\"#fe6d31\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{\n                justifyContent: 'center',\n                position: 'absolute',\n                top: '0',\n                left: '50%',\n                transform: 'translateX(-50%)',\n              }}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </BtnLoadMore>\n        )}\n      </SectionTemplate>\n    </motion.div>\n  );\n}\nexport default MovieGenres;\n","import axios from 'axios';\n\nconst API_KEY = 'c7dd7652c2a2bbf7bac5e128508653f3';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = API_BASE_URL;\n\n// Movie: trending https://api.themoviedb.org/3   /trending/movie/day   ?language=en-US\n// Genres:         https://api.themoviedb.org/3   /genre/movie/list\n// Search by name: https://api.themoviedb.org/3   /search/movie         ?query=iron&include_adult=false&language=en-US&page=1\n// Top Rated:      https://api.themoviedb.org/3   /movie/top_rated\n// Popular:        https://api.themoviedb.org/3   /movie/popular\n// Now Playing:    https://api.themoviedb.org/3   /movie/now_playing\n// movieByGenre    https://api.themoviedb.org/3   /discover/movie       ?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=28\n\nconst MOVIES_API = {\n  trending: '/trending/movie/day',\n  genres: '/genre/movie/list',\n  movieByGenre: '/discover/movie',\n  moviesSearch: '/search/movie',\n  topRated: '/movie/top_rated',\n  popular: '/movie/popular',\n  nowPlaying: '/movie/now_playing',\n};\n\nexport const getTrendingMoviesList = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.trending, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getGenres = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.genres, {\n      params: { api_key: API_KEY },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getTopRated = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.topRated, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getPopular = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.popular, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getNowPlaying = async () => {\n  try {\n    const result = await axios.get(MOVIES_API.nowPlaying, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesSearch = async (query, page) => {\n  try {\n    const result = await axios.get(MOVIES_API.moviesSearch, {\n      params: { query, api_key: API_KEY, language: 'en-US', page },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMoviesByGenre = async (genre, page) => {\n  try {\n    const result = await axios.get(MOVIES_API.movieByGenre, {\n      params: {\n        include_adult: false,\n        api_key: API_KEY,\n        include_video: false,\n        language: 'en-US',\n        page,\n        sort_by: 'popularity.desc',\n        with_genres: genre,\n      },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n"],"names":["ButtonStyled","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","type","GenreList","GenreName","Link","_templateObject2","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","array","setArray","location","useLocation","useEffect","getGenres","then","genres","catch","err","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_Fragment","map","_ref2","id","name","randomDate","Date","Math","floor","random","to","concat","state","from","getTime","Form","Label","Input","_templateObject3","ButtonSearch","_templateObject4","Icon","BiSearchAlt","_templateObject5","BtnLoadMore","_templateObject6","_location$state$from","_location$state","movie","setMovie","page","setPage","_useState7","_useState8","prevGenre","setPrevGenre","_useState9","_useState10","_useState11","_useState12","title","setTitle","genre","useParams","_useState13","_useState14","loaderLoadMore","setLoaderLoadMore","backLinkHref","useRef","length","selectedGenre","find","ob","parseInt","getMoviesByGenre","results","prevMovies","_toConsumableArray","_jsxs","motion","initial","opacity","animate","exit","GenrePanel","SectionTemplate","current","Button","TitleTemplate","ListTemplate","index","Card","movieId","poster","rating","date","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","top","left","transform","wrapperClassName","visible","onClick","prevPage","API_KEY","axios","MOVIES_API","getTrendingMoviesList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","params","api_key","language","sent","abrupt","data","t0","Error","response","message","stop","apply","arguments","_callee2","_context2","getTopRated","_ref3","_callee3","_context3","getPopular","_ref4","_callee4","_context4","getNowPlaying","_ref5","_callee5","_context5","getMoviesSearch","_ref6","_callee6","query","_context6","_x","_x2","_ref7","_callee7","_context7","include_adult","include_video","sort_by","with_genres","_x3","_x4"],"sourceRoot":""}