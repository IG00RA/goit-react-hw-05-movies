{"version":3,"file":"static/js/402.d6925322.chunk.js","mappings":"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","sources":["services/actorsAPI.js","components/Actors/ActorCard/ActorCard.styled.js","components/Actors/ActorCard/ActorCard.jsx","components/Actors/Trending/Trending.styled.js","components/Actors/Trending/Trending.jsx","pages/Actors.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'c7dd7652c2a2bbf7bac5e128508653f3';\nconst API_BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = API_BASE_URL;\n\n// People          https://api.themoviedb.org/3   /trending/person/day  ?language=en-US\n// Search by name: https://api.themoviedb.org/3   /search/person        ?query=iron&include_adult=false&language=en-US&page=1\n// Popular         https://api.themoviedb.org/3   /person/popular\n// Details         https://api.themoviedb.org/3   /person/              {person_id}\n\nconst ACTORS_API = {\n  trending: '/trending/person/day',\n  // peopleSearch: '/search/person',\n  // popular: '/person/popular',\n  // person: '/person/',\n};\n\nexport const getTrendingActorsList = async () => {\n  try {\n    const result = await axios.get(ACTORS_API.trending, {\n      params: { api_key: API_KEY, language: 'en-US' },\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\n// export const getPopularActors = async () => {\n//   try {\n//     const result = await axios.get(ACTORS_API.popular, {\n//       params: { api_key: API_KEY, language: 'en-US' },\n//     });\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n\n// export const getActorSearch = async query => {\n//   try {\n//     const result = await axios.get(ACTORS_API.peopleSearch, {\n//       params: {\n//         query: { query },\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         page: 1,\n//       },\n//     });\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n\n// export const getActorDetails = async person_id => {\n//   try {\n//     const result = await axios.get(\n//       { person_id },\n//       {\n//         params: { api_key: API_KEY },\n//       }\n//     );\n//     return result.data;\n//   } catch (error) {\n//     throw new Error(error.response.data.message);\n//   }\n// };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const CardWrapper = styled(Link)`\n  width: 200px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  cursor: auto;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n`;\n\nexport const Title = styled.h3`\n  font-size: 14px;\n  font-weight: 400;\n  color: white;\n  padding-top: 10px;\n  max-width: 80%;\n`;\n","import { CardWrapper, ImgWrapper, Poster, Title } from './ActorCard.styled';\n\nfunction ActorCard({ title, poster }) {\n  return (\n    <CardWrapper>\n      <ImgWrapper>\n        <Poster src={`http://image.tmdb.org/t/p/w200${poster}`} alt={title} />\n      </ImgWrapper>\n      <Title>{title}</Title>\n    </CardWrapper>\n  );\n}\nexport default ActorCard;\n","import styled from '@emotion/styled';\n\nexport const TrendingTitle = styled.h2`\n  position: relative;\n  padding-bottom: 10px;\n  color: white;\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    height: 2px;\n    width: 100%;\n    background-image: linear-gradient(to right, #2d2b36, transparent);\n  }\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding-top: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrendingActorsList } from 'services/actorsAPI';\nimport ActorCard from '../ActorCard/ActorCard';\nimport { TrendingTitle, TrendingList } from './Trending.styled';\nimport { toast } from 'react-toastify';\nimport Loading from 'components/Loading/Loading';\nimport TitleTemplate from 'components/TitleTemplate/TitleTemplate';\n\nfunction Trending() {\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTrendingActorsList()\n      .then(({ results }) => {\n        setArray(results);\n      })\n      .catch(err => {\n        setError(true);\n        console.log(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (error) {\n    toast.error('Sorry for the inconvenience! Try again later.', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  }\n\n  if (loading) {\n    return (\n      <>\n        <TitleTemplate>Trending persons...</TitleTemplate>\n        <Loading />\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <TrendingTitle>Trending persons</TrendingTitle>\n      <TrendingList>\n        {array.map(actor => {\n          if (!actor['profile_path']) {\n            return [];\n          }\n          return (\n            <ActorCard\n              key={actor.id}\n              title={actor.name}\n              poster={actor['profile_path']}\n            />\n          );\n        })}\n      </TrendingList>\n    </div>\n  );\n}\nexport default Trending;\n","import Trending from 'components/Actors/Trending/Trending';\nimport SectionTemplate from 'components/SectionTemplate/SectionTemplate';\nimport { motion } from 'framer-motion';\n\nfunction Actors() {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <SectionTemplate>\n        <Trending />\n      </SectionTemplate>\n    </motion.div>\n  );\n}\n\nexport default Actors;\n"],"names":["axios","ACTORS_API","getTrendingActorsList","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","params","api_key","language","sent","abrupt","data","t0","Error","response","message","stop","apply","arguments","CardWrapper","styled","Link","_templateObject","_taggedTemplateLiteral","ImgWrapper","_templateObject2","Poster","_templateObject3","Title","_templateObject4","title","poster","_jsxs","children","_jsx","src","concat","alt","TrendingTitle","TrendingList","_useState","useState","_useState2","_slicedToArray","error","setError","_useState3","_useState4","loading","setLoading","_useState5","_useState6","array","setArray","useEffect","then","results","catch","err","console","log","finally","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_Fragment","TitleTemplate","Loading","map","actor","ActorCard","name","id","motion","initial","opacity","animate","exit","SectionTemplate","Trending"],"sourceRoot":""}